# Based off of https://github.com/aws-samples/aws-lambda-efs-samples
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.8

  Sample SAM Template for lambda-docker-runner

Parameters:
  SecurityGroupIds:
    Type: CommaDelimitedList
  SubnetIDs:
    Type: CommaDelimitedList
    Description: The list of SubnetIDs in your Virtual Private Cloud (VPC)
  EFSpath:
    Type: String
    Default: /mnt/efs
  AccessPointARN:
    Type: String
    Description: Access point ARN
  MemorySize:
    Type: Number
    MinValue: 128
    MaxValue: 10240
    Default: 128
    Description: >-
      The amount of memory available to the function at runtime. Increasing the function's
      memory also increases its CPU allocation.
  ImageUri:
    Type: String
    Description: >-
      The URI of the Amazon ECR) repository for the Lambda function's container image.
      Example: 111111111.dkr.ecr.us-east-1.amazonaws.com/MY-DOCKER:latest
  EntryPoint:
    Type: String
    Default: ""
    Description: (Optional) The entry point to the application in the container
  Command:
    Type: CommaDelimitedList
    Default: ""
    Description: (Optional) Command separated list of parameters to pass in with ENTRYPOINT
  WorkingDirectory:
    Type: String
    Default: ""
    Description: (Optional) The working directory for the container
Conditions:
  HasEntryPoint: !Not [!Equals [!Ref EntryPoint, ""]]
  HasCommand: !Not
    - !Equals
      - !Join ["", !Ref Command]
      - ''
  HasWorkingDirectory: !Not [!Equals [!Ref WorkingDirectory, ""]]
Resources:
  EfsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AmazonElasticFileSystemClientFullAccess
            Effect: Allow
            Action:
              - elasticfilesystem:ClientMount
              - elasticfilesystem:ClientRootAccess
              - elasticfilesystem:ClientWrite
              - elasticfilesystem:DescribeMountTargets
            Resource: "*"
  ExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSLambdaVPCAccessExecutionRole
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
            Resource: "*"
  DockerRunnerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Timeout: 900
      PackageType: Image
      ImageUri: !Ref ImageUri
      ImageConfig:
        Command: !If [HasCommand, !Ref Command, !Ref 'AWS::NoValue']
        EntryPoint: !If [HasEntryPoint, !Ref EntryPoint, !Ref 'AWS::NoValue']
        WorkingDirectory: !If [HasWorkingDirectory, !Ref WorkingDirectory, !Ref 'AWS::NoValue']
      MemorySize: !Ref MemorySize
      Environment:
        Variables:
          EFS_PATH: !Ref EFSpath
      Events:
        DockerRunner:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /run
            Method: get
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
        - Arn: !Ref AccessPointARN
          LocalMountPath: !Ref EFSpath
      Policies:
        - !Ref EfsPolicy
        - !Ref ExecutionPolicy

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DockerRunnerApi:
    Description: "API Gateway endpoint URL for Prod stage for Docker Runner function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/run/"
  DockerRunnerFunction:
    Description: "Docker Runner Lambda Function ARN"
    Value: !GetAtt DockerRunnerFunction.Arn
  DockerRunnerFunctionIamRole:
    Description: "Implicit IAM Role created for Docker Runner function"
    Value: !GetAtt DockerRunnerFunctionRole.Arn
